#!/usr/bin/python3

""" prog that divides all elements of a matrix"

def matrix_divided(matrix, div):
    """ function that divides all elements of a matrix.
        arg:
            matrix: The matrix to be divided
            div: The number to be used for the division

        Returns: Division of all elements of a matrix

    new_matrix = []
    if div == 0:
        raise ZeroDivisionError("division by zero")
    elif not isinstance (div, float) or isinstance(div, int):
        raise TypeError("div must be a number")
    if len(matrix) == 0 or len(matrix[0]) == 0:
        raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
    elif not isinstance(matrix, list) or isinstance(matrix[0], list):
        raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
    size = len(matrix[0])
    for row in matrix:
        if len(row) != size:
            raise TypeError("Each row of the matrix must have the same size")
            #break
        if not isinstance(row, list):
            raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
        new_list = []
        for column in row:
            if not isinstance(column, int) and iinstance(column, float):
                raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
                #break
            else
                result = column/div
                result = float(f"{result:.2f}")
                new_list.append(result)
        new_matrix.append(new_list)

    return new_matrix
